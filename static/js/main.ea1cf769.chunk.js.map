{"version":3,"sources":["MarkdownViewer.tsx","MarkdownEditor.tsx","App.js","reportWebVitals.js","index.js"],"names":["require","BlockMath","InlineMath","emoji","gfm","MarkdownViewer","props","newProps","escapeHtml","plugins","RemarkMathPlugin","renderers","text","value","replace","name","getUnicode","break","paragraph","className","children","emphasis","link","href","linkReference","strong","delete","list","start","listItem","blockquote","code","table","tableCell","style","textAlign","align","padding","isHeader","background","inlineCode","math","inlineMath","html","MarkDownWithLaTeXRules","latexRules","LatexHighlightRules","window","ace","getRules","$rules","push","token","regex","next","embedRules","MarkdownHighlightRules","CustomMarkdownMode","HighlightRules","Mode","MarkdownEditor","contents","onChange","useState","source","setSource","undefined","timer","setTimer","editorDivRef","useRef","editorRef","viewerRef","updateSource","current","session","editor","getSession","getValue","clearInterval","useEffect","customMarkDown","setMode","height","offsetHeight","setInterval","setValue","Paper","component","Grid","container","direction","justify","Typography","variant","Divider","orientation","ref","mode","theme","fontSize","showPrintMargin","minLines","maxLines","showGutter","highlightActiveLine","wrapEnabled","flexItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea1cf769.chunk.js","sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport RemarkMathPlugin from 'remark-math';\nimport 'katex/dist/katex.min.css';\n\nconst { BlockMath, InlineMath } = require(\"react-katex\");\nconst emoji = require(\"emoji-dictionary\");\nconst gfm = require(\"remark-gfm\");\n\ninterface MarkdownViewerProps {\n    source: string;\n}\n\nconst MarkdownViewer: React.FC<MarkdownViewerProps> = (props: MarkdownViewerProps) => {\n\tconst newProps = {\n\t\tescapeHtml: false,\n\t\tplugins: [\n\t\t\tRemarkMathPlugin,\n            gfm // Table 지원\n\t\t],\n\n\t\trenderers: {\n            /* 각 element에 대한 렌더링 방식을 정의할 것. */\n            /* 아래에서 정의하지 않은 element는 ReactMarkdown의 기본 방식을 따름. */\n\t\t\ttext: (props: any) => props.value.replace(/:[^:\\s]*(?:::[^:\\s]*)*:/gi, (name: string) => emoji.getUnicode(name)),\n\t\t\tbreak: (props: any) => <br></br>,\n\t\t\tparagraph: (props: any) => <p className=\"markdown_paragraph\">{props.children}</p>,\n\t\t\temphasis: (props: any) => <em className=\"markdown_emphasis\">{props.children}</em>,\n\t\t\tlink: (props: any) => props.href ? <a className=\"markdown_link\" href={props.href}>{props.children}</a> : <strong className=\"markdown_strong\">(주소가 없는 링크는 만들 수 없습니다.)</strong>,\n\t\t\tlinkReference: (props: any) => props.href ? <a className=\"markdown_link\" href={props.href}>{props.children}</a> : <strong className=\"markdown_strong\">(주소가 없는 링크는 만들 수 없습니다.)</strong>,\n\t\t\tstrong: (props: any) => <strong className=\"markdown_strong\">{props.children}</strong>,\n\t\t\tdelete: (props: any) => <del>{props.children}</del>,\n\t\t\tlist: (props: any) => props.start ? <ol className=\"markdown_ol\">{props.children}</ol> : <ul className=\"markdown_ul\">{props.children}</ul>,\n\t\t\tlistItem: (props: any) => <li className=\"markdown_list_item\">{props.children}</li>,\n\t\t\tblockquote: (props: any) => (\n\t\t\t\t<blockquote className=\"markdown_blockquote\">\n\t\t\t\t\t{props.children}\n\t\t\t\t</blockquote>),\n\t\t\tcode: (props: any) => (\n\t\t\t\t<pre className=\"markdown_pre\">\n\t\t\t\t\t<code>\n\t\t\t\t\t\t{props.value}\n\t\t\t\t\t</code>\n\t\t\t\t</pre>),\n\t\t\ttable: (props: any) => (\n\t\t\t\t<table className=\"markdown_table\">{props.children}</table>\n\t\t\t),\n\t\t\ttableCell: (props: any) => {\n\t\t\t\tlet style: any = {\n\t\t\t\t\ttextAlign: props.align ? props.align : 'center',\n\t\t\t\t\tpadding: \"6px 13px\"\n\t\t\t\t};\n\n\t\t\t\tstyle.border = '1px solid #dfe2e5';\n\t\t\t\tif (props.isHeader) {\n\t\t\t\t\tstyle.background = '#f2f2f2'   \n\t\t\t\t}\n\n\t\t\t\treturn <td style={style}>{props.children}</td>\n\t\t\t},\n\t\t\tinlineCode: (props: any) => <code className=\"markdown_inline_code\">{props.value}</code>,\n\t\t\tmath: (props: any) => <BlockMath>{props.value}</BlockMath>,\n\t\t\tinlineMath: (props: any) => <InlineMath>{props.value}</InlineMath>,\n\t\t\thtml: (props: any) => <strong className=\"markdown_strong\">(HTML 태그는 사용할 수 없습니다.)</strong>\n\t\t}\n\t};\n\n\treturn (\n\t\t<ReactMarkdown className=\"markdown_viewer\" {...props} {...newProps}></ReactMarkdown>\n\t);\n};\n\nexport default MarkdownViewer;","import React, { useEffect, useState, useRef } from 'react';\nimport { Paper, Grid, Typography, Divider } from '@material-ui/core';\nimport MarkdownViewer from './MarkdownViewer';\nimport AceEditor from 'react-ace';\nimport AceBuild from \"ace-builds\";\n\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/mode-latex\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\n\nclass MarkDownWithLaTeXRules\n    extends window.ace.require(\"ace/mode/markdown_highlight_rules\").MarkdownHighlightRules {\n    constructor() {\n        super();\n        //console.log(this.$rules)\n        let LatexHighlightRules = window.ace.require(\"ace/mode/latex_highlight_rules\").LatexHighlightRules;\n        let latexRules = (new LatexHighlightRules()).getRules();\n        //console.log(latexRules);\n\n        this.$rules.start.push({\n            token: \"keyword\",\n            regex: \"\\\\$\\\\$\",\n            next: \"latex-start\"\n        });\n        this.$rules.start.push({\n            token: \"keyword\",\n            regex: \"\\\\$\",\n            next: \"latex-start\"\n        });\n        \n        this.embedRules(latexRules, \"latex-\", [\n            {\n                token: \"keyword\",\n                regex: \"\\\\$\\\\$\",\n                next: \"start\"\n            },\n            {\n                token: \"keyword\",\n                regex: \"\\\\$\",\n                next: \"start\"\n            }\n        ]);\n\n    }\n}\n\nclass CustomMarkdownMode\n    extends window.ace.require(\"ace/mode/markdown\").Mode {\n    constructor() {\n        super();\n        this.HighlightRules = MarkDownWithLaTeXRules;\n    }\n}\n\ninterface MarkdownEditorProps {\n    contents: string;\n    onChange: React.Dispatch<string>;\n}\n\nconst MarkdownEditor: React.FC<MarkdownEditorProps> = ({ contents, onChange }) => {\n    const [source, setSource] = useState<string>(\"\");\n    const [timer, setTimer] = useState<NodeJS.Timeout | undefined>(undefined);\n    const editorDivRef = useRef<HTMLDivElement>(null);\n    const editorRef = useRef<AceEditor>(null);\n    const viewerRef = useRef<HTMLDivElement>(null);\n\n    function updateSource() {\n        if (editorRef.current) {\n            let session = editorRef.current.editor.getSession();\n            setSource(session.getValue());\n        } else if (timer !== undefined) {\n            clearInterval(timer);\n        }\n    }\n\n    useEffect(() => {\n        const customMarkDown = new CustomMarkdownMode();\n\n        if (editorRef !== undefined && viewerRef !== undefined) {\n            let session = editorRef?.current?.editor?.getSession();\n\n            if (session !== undefined) {\n                session.setMode(customMarkDown as AceBuild.Ace.SyntaxMode);\n                if (viewerRef.current && editorDivRef.current)\n                    viewerRef.current.style.height = `${editorDivRef.current.offsetHeight}px`;\n                setTimer(setInterval(updateSource, 250));\n            }\n        }\n    }, []);\n\n    useEffect(() => {\n        setSource(contents === undefined ? \"\" : contents);\n\n        if (editorRef !== undefined && viewerRef !== undefined) {\n            let session = editorRef?.current?.editor?.getSession();\n\n            if (session !== undefined) {\n                session.setValue(contents === undefined ? \"\" : contents);\n            }\n        }\n    }, [contents]);\n\n    function handleTextChange(value: string): void {\n        if (onChange)\n            onChange(value);\n    }\n\n    return (\n        <Paper component=\"form\" className=\"editor_root\">\n            <Grid container direction=\"row\" justify=\"center\">\n                <div className=\"editor_input_container\">\n                    <Typography variant=\"caption\">Markdown 및 LaTeX 형식</Typography>\n                    <Divider className=\"editor_caption_divider\" orientation=\"horizontal\"></Divider>\n                    <div className=\"editor_input\" ref={editorDivRef}>\n                        <AceEditor\n                            ref={editorRef}\n                            className=\"editor_input\"\n                            mode=\"markdown\"\n                            theme=\"textmate\"\n                            fontSize={18}\n                            showPrintMargin={false}\n                            minLines={35}\n                            maxLines={35}\n                            showGutter={true}\n                            highlightActiveLine={true}\n                            wrapEnabled={true}\n                            onChange={handleTextChange}\n                        ></AceEditor>\n                    </div>\n                </div>\n                <Divider className=\"editor_divider\" orientation=\"vertical\" flexItem></Divider>\n                <div className=\"editor_viewer_container\">\n                    <Typography variant=\"caption\">미리 보기</Typography>\n                    <Divider className=\"editor_caption_divider\" orientation=\"horizontal\"></Divider>\n                    <div ref={viewerRef} className=\"editor_viewer\">\n                        <MarkdownViewer source={source}/>\n                    </div>\n                </div>\n            </Grid>\n        </Paper>\n    );\n};\n\nexport default MarkdownEditor;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport './App.css';\nimport MarkdownEditor from './MarkdownEditor';\n\nfunction App() {\n  let content = \n`\n# 0. Emoji 테스트\n\n[여기에](https://gist.github.com/rxaviers/7360908) 나열된 Emoji를 사용할 수 있습니다.\n\n# :smile: :sunglasses: :+1:\n\n# 1. LaTeX 테스트\n\nLaTeX 문법으로 입력한 수식이 Markdown 요소와 잘 섞여 출력됩니다.\n\n### 예시 문제\n\n**Review the following textbox.**\n***\nFunction $G:Z^+ \\\\rightarrow Z$ is defined by the rule\n\n$$\n  G(n)=\\\\begin{cases}\n      1 & \\\\text{if } n=1 \\\\\\\\\n      G(\\\\frac{n}{2}) & \\\\text{if }n\\\\text{ is even} \\\\\\\\\n      2+G(3n-5) & \\\\text{if }n\\\\text{ is odd and }n>1 \\\\\\\\\n  \\\\end{cases}\n$$\n\nfor each integer $n \\\\geq 1$.\n***\n\n**Is the function G is well defined? Justify your answer.**\n\n### 예시 답안\n\n함수가 잘 정의되지 않았다는 반례를 들 수 있다. $n=5$라고 하자. 그렇다면 $G(n)$은 아래와 같이 전개된다.\n\n$$\n\\\\begin{aligned}\n    G(5) =& 2+G(3 \\\\cdot 5 - 5) & \\\\text{(5는 1보다 큰 홀수이므로 3번째 경우에 대입)} \\\\\\\\\n    =& 2+G(10) & \\\\text{(대수적 계산에 의함)} \\\\\\\\\n    =& 2+G(5) & \\\\text{(10은 짝수이므로 2번째 경우에 대입)} \\\\\\\\\n\\\\end{aligned}\n$$\n\n결과적으로 $G(5)=2+G(5)$라는 결과가 도출되므로 $G(5)$를 정의할 수 없다. 따라서 함수 $G$는 잘 정의되지 않았다. (not well-defined)\n\n# 2. 헤더 테스트\n\n아래와 같은 6가지 해더를 사용할 수 있습니다.\n\n# This is a H1\n## This is a H2\n### This is a H3\n#### This is a H4\n##### This is a H5\n###### This is a H6\n\n# 3. BlockQuote 테스트\n\n\\`\\`\\`>\\`\\`\\` 문자를 이용하여 인용문을 작성할 수 있습니다.\n\n> This is a first blockqute.\n>> This is a second blockqute.\n>>> This is a third blockqute.\n\n> ### This is a H3\n> * List\n>>\\`\\`\\`\n>>code\n>>\\`\\`\\`\n\n# 4. 목록 테스트\n\n아래와 같이 숫자로 시작하는 목록과 점으로 시작하는 목록을 작성할 수 있습니다.\n\n1. 첫번째\n2. 두번째\n3. 세번째\n\n* 빨강\n  * 녹색\n    * 파랑\n\n+ 빨강\n  + 녹색\n    + 파랑\n\n- 빨강\n  - 녹색\n    - 파랑\n\n* 1단계\n  - 2단계\n    + 3단계\n      + 4단계\n\n# 5. 코드 테스트\n\n아래와 같이 코드 블럭을 사용할 수 있습니다.\n\nThis is a normal paragraph:\n\n    This is a code block.\n\nend code block.\n\n\\`\\`\\`\npublic class BootSpringBootApplication {\n  public static void main(String[] args) {\n    System.out.println(\"Hello, Honeymon\");\n  }\n}\n\\`\\`\\`\n\n# 6. 수평선 테스트\n\n아래와 같이 수평선을 사용할 수 있습니다.\n\n* * *\n\n***\n\n*****\n\n- - -\n\n---------------------------------------\n\n# 7. 링크 테스트\n\n아래와 같이 링크를 생성할 수 있습니다.\n\nLink: [Google][googlelink]\n\n[googlelink]: https://google.com \"Go google\"\n\n# 8. 강조 테스트\n\n아래와 같이 강조할 수 있습니다.\n\n* *single asterisks*\n* _single underscores_\n* **double asterisks**\n* __double underscores__\n* ~~cancelline~~\n\n# 9. 이미지 삽입 테스트\n\n아직 이미지 서버를 지원하지는 않으나, 아래와 같은 방법으로 이미지 서버에 있는 이미지를 가져올 수 있습니다.\n\n![screensh](https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png)\n\n# 10. 표 테스트\n\n아래와 같이 표를 작성할 수 있습니다.\n\n| Option | Description |\n| ------ | ----------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\n| Option | Description |\n| ------:| -----------:|\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\n`;\n\n  return (\n    <Grid container direction=\"column\" className=\"app_root\">\n      <MarkdownEditor className=\"editor\" contents={content}></MarkdownEditor>\n    </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}